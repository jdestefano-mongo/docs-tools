{"version":3,"file":"navbar.js","sources":["../js/componentCopyButtons.js","../js/util.js","../js/componentFastLoad.js","../node_modules/rigning/src/lib.js","../js/componentFeedback.js","../js/componentSidebar.js","../js/componentTabs.js","../js/componentVersionSelector.js","../js/navbar.js"],"sourcesContent":["export function setup() {\n    const copyableBlocks = document.getElementsByClassName('copyable-code');\n    for (const copyBlock of copyableBlocks) {\n        const highlightElement = copyBlock.getElementsByClassName('highlight')[0];\n        if (!highlightElement) {\n            return;\n        }\n\n        const text = highlightElement.innerText.trim();\n        const copyButtonContainer = document.createElement('div');\n        const copyButton = document.createElement('button');\n        const copyIcon = document.createElement('span');\n        copyButtonContainer.className = 'copy-button-container';\n        copyIcon.className = 'fa fa-clipboard';\n        copyButton.className = 'copy-button';\n        copyButton.appendChild(copyIcon);\n        copyButton.appendChild(document.createTextNode('Copy'));\n        copyButtonContainer.appendChild(copyButton);\n        highlightElement.insertBefore(copyButtonContainer, highlightElement.children[0]);\n        copyButton.addEventListener('click', () => {\n            const tempElement = document.createElement('textarea');\n            document.body.appendChild(tempElement);\n            tempElement.value = text;\n            tempElement.select();\n\n            try {\n                const successful = document.execCommand('copy');\n                if (!successful) {\n                    throw new Error('Failed to copy');\n                }\n            } catch (err) {\n                console.error('Failed to copy');\n                console.error(err);\n            }\n\n            document.body.removeChild(tempElement);\n        });\n    }\n}\n","export function isLeafNode($node) {\n    return !$node.siblings('ul:not(.simple)').length;\n}\n\n/* Checks a whitelist for non-leaf nodes that should trigger a full page reload */\nexport function requiresPageload($node) {\n    const docsExcludedNav = window.docsExcludedNav;\n\n    if (!docsExcludedNav || !docsExcludedNav.length) {\n        return false;\n    }\n\n    for (let i = 0; i < docsExcludedNav.length; i += 1) {\n        if ($node[0].href.indexOf(docsExcludedNav[i]) !== -1) {\n            return true;\n        }\n    }\n    return false;\n}\n","import * as util from './util';\n\n/* Wrapper around XMLHttpRequest to make it more convenient\n * Calls options.success(response, url), providing the response text and\n *         the canonical URL after redirects.\n * Calls options.error() on error.\n * jQuery's wrapper does not supply XMLHttpRequest.responseURL, making\n * this rewrite necessary. */\nfunction xhrGet(url, options) {\n    const xhr = new XMLHttpRequest();\n\n    xhr.onload = function() {\n        if (xhr.status >= 200 && xhr.status < 400) {\n            options.success(xhr.responseText, xhr.responseURL);\n            options.complete();\n        } else {\n            options.error();\n            options.complete();\n        }\n    };\n\n    xhr.onerror = function() {\n        options.error();\n        options.complete();\n    };\n\n    xhr.open('GET', url, true);\n    try {\n        xhr.send();\n    } catch (err) {\n        options.error();\n        options.complete();\n    }\n}\n\n// If the browser is sufficiently modern, make navbar links load only\n// content pieces to avoid a full page load.\nexport function setup(fastNav) {\n    if (window.history === undefined ||\n        document.querySelectorAll === undefined ||\n        document.body.classList === undefined ||\n        (new XMLHttpRequest()).responseURL === undefined) {\n        return false;\n    }\n\n    let navRootElement = document.querySelector('.sphinxsidebarwrapper');\n    let bodyElement = document.querySelector('.body');\n    let curLoading = {};\n\n    // Set up initial state so we can return to our initial landing page.\n    window.history.replaceState({'href': window.location.href},\n                                document.querySelector('title').textContent,\n                                window.location.href);\n\n    // Stop loading the currently-in-progress page.\n    function abortLoading() {\n        if (curLoading.timeoutID !== undefined) {\n            window.clearTimeout(curLoading.timeoutID);\n        }\n\n        if (curLoading.xhr !== undefined) {\n            curLoading.xhr.abort();\n        }\n\n        curLoading = {};\n    }\n\n    // Load the specified URL.\n    function loadPage(href, createHistory) {\n        if (href === undefined) {\n            console.error('Going to undefined path');\n        }\n\n        abortLoading();\n        bodyElement.classList.add('loading');\n\n        // If something goes wrong while loading, we don't want to leave\n        // people without a paddle. If we can't load after a long period of\n        // time, bring back the original content.\n        curLoading.timeoutID = window.setTimeout(() => {\n            bodyElement.classList.remove('loading');\n            curLoading.timeoutID = -1;\n        }, 10000);\n\n        const startTime = new Date();\n        curLoading.xhr = xhrGet(href, {\n            'complete': () => {\n                abortLoading();\n            },\n            'error': (error) => {\n            // Some browsers consider any file://-type request to be cross-origin.\n            // Upon any kind of error, fall back to classic behavior\n                console.error(`Failed to load ${href}`);\n                window.location = href;\n            },\n            'success': (pageText, trueUrl) => {\n                const enlapsedMs = (new Date()) - startTime;\n                bodyElement.classList.remove('loading');\n\n                // Change URL before loading the DOM to properly resolve URLs\n                if (createHistory) {\n                    window.history.pushState({'href': trueUrl}, '', trueUrl);\n                }\n\n                const page = document.createElement('html');\n                page.innerHTML = pageText;\n                const title = page.querySelector('title').textContent;\n                const newBody = page.querySelector('.body');\n                const newNav = page.querySelector('.sphinxsidebarwrapper');\n\n                // Fade in ONLY if we had enough time to start fading out.\n                if (enlapsedMs > (250 / 4)) {\n                    newBody.classList.add('loading');\n                }\n\n                // Replace the DOM elements\n                bodyElement.parentElement.replaceChild(newBody, bodyElement);\n                bodyElement = newBody;\n                navRootElement.parentElement.replaceChild(newNav, navRootElement);\n                navRootElement = newNav;\n                document.title = title;\n\n                // Update dynamic page features\n                fastNav.update();\n\n                if (window.history.onnavigate) {\n                    window.history.onnavigate();\n                }\n\n                // Prime the new DOM so that we can set up our fade-in\n                // animation and scroll the new contents to the top.\n                window.setTimeout(() => {\n                    bodyElement.classList.remove('loading');\n\n                    // Scroll to the top of the page only if this is a new history entry.\n                    if (createHistory) {\n                        window.scroll(0, 0);\n                    }\n                }, 1);\n            }\n        });\n    }\n\n    // Set up fastnav links\n    const nodes = document.querySelectorAll('.sphinxsidebarwrapper > ul a.reference.internal');\n    function handleClickFunction(ev) {\n        // Ignore anything but vanilla click events, so that people can\n        // still use special browser behaviors like open in new tab.\n        if (!(ev.button !== 0 || ev.shiftKey || ev.altKey || ev.metaKey || ev.ctrlKey)) {\n            ev.preventDefault();\n            loadPage(ev.currentTarget.href, true);\n        }\n    }\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (!util.isLeafNode($(node)) && !util.requiresPageload($(node))) { continue; }\n\n        node.addEventListener('click', handleClickFunction);\n    }\n\n    window.onpopstate = function(ev) {\n        if (ev.state === null) { return; }\n        loadPage(ev.state.href, false);\n    };\n\n\n    return true;\n}\n","// @flow\n\nconst FEEDBACK_URL = 'http://deluge.us-east-1.elasticbeanstalk.com/'\n\nfunction addQueryParameters(url/*: string*/, parameters/*: Map<string, string|number|boolean>*/)/*: string*/ {\n    const queryComponents = []\n\n    parameters.forEach((value, key) => {\n        queryComponents.push(`${encodeURIComponent(key)}=${encodeURIComponent(JSON.stringify(value))}`)\n    })\n\n    return url + '?' + queryComponents.join('&')\n}\n\nclass PendingVote {\n    /*:: vote: boolean */\n\n    constructor(vote/*: boolean*/) {\n        this.vote = vote\n    }\n}\n\n/*::\ntype State = PendingVote | 'Voted' | 'NotVoted'\n\ninterface Question {\n    answer: ?any;\n    name: string;\n    clear(): void;\n    draw(): HTMLElement;\n}\n*/\n\nclass FreeformQuestion {\n    /*::\n    name: string\n    caption: string\n    answer: ?string\n    */\n\n    constructor(name/*: string*/, caption/*: string*/) {\n        this.name = name\n        this.caption = caption\n        this.answer = null\n    }\n\n    clear()/*: void*/ { this.answer = null }\n\n    draw()/*: HTMLElement*/ {\n        const element = document.createElement('div')\n        const textForm = document.createElement('textarea')\n        textForm.placeholder = this.caption\n        element.appendChild(textForm)\n        element.oninput = () => { this.answer = textForm.value }\n\n        return element\n    }\n}\n\nclass BinaryQuestion {\n    /*::\n    name: string\n    promptHtml: string\n    answer: ?boolean\n    */\n\n    constructor(name/*: string*/, promptHtml/*: string*/) {\n        this.name = name\n        this.promptHtml = promptHtml\n        this.answer = null\n    }\n\n    clear()/*: void*/ { this.answer = null }\n\n    draw()/*: HTMLElement*/ {\n        const element = document.createElement('div')\n        element.innerHTML = this.promptHtml\n\n        const thumbsGutter = document.createElement('div')\n        const thumbsUp = document.createElement('span')\n        const thumbsDown = document.createElement('span')\n\n        thumbsUp.className = 'switch fa fa-thumbs-up good'\n        thumbsUp.onclick = () => {\n            this.answer = true\n            thumbsUp.className = 'switch fa fa-thumbs-up good selected'\n            thumbsDown.className = 'switch fa fa-thumbs-down bad'\n        }\n\n        thumbsDown.className = 'switch fa fa-thumbs-down bad'\n        thumbsDown.onclick = () => {\n            this.answer = false\n            thumbsUp.className = 'switch fa fa-thumbs-up good'\n            thumbsDown.className = 'switch fa fa-thumbs-down bad selected'\n        }\n\n        thumbsGutter.appendChild(thumbsUp)\n        thumbsGutter.appendChild(thumbsDown)\n        element.appendChild(thumbsGutter)\n\n        return element\n    }\n}\n\nclass RangeQuestion {\n    /*::\n    name: string\n    promptHtml: string\n    answer: ?number\n    */\n\n    constructor(name/*: string*/, promptHtml/*: string*/) {\n        this.name = name\n        this.promptHtml = promptHtml\n        this.answer = null\n    }\n\n    clear()/*: void*/ {\n        this.answer = null\n    }\n\n    draw()/*: HTMLElement*/ {\n        const element = document.createElement('div')\n        const promptElement = document.createElement('div')\n        element.appendChild(promptElement)\n\n        promptElement.innerHTML = this.promptHtml\n\n        const starElements = []\n        for(let i = 0; i < RangeQuestion.numberOfOptions(); i += 1) {\n            const starElement = document.createElement('span')\n\n            starElement.onclick = () => {\n                this.answer = i + 1\n                this.updateView(starElements)\n            }\n\n            element.appendChild(starElement)\n            starElements.push(starElement)\n        }\n\n        this.updateView(starElements)\n\n        return element\n    }\n\n    updateView(starElements/*: HTMLElement[]*/)/*: void*/ {\n        for(let i = 0; i < starElements.length; i += 1) {\n            const starElement = starElements[i]\n\n            starElement.className = 'rangestar fa'\n            if(this.answer == null || i >= this.answer) {\n                starElement.className += ' fa-star-o'\n            } else {\n                starElement.className += ' fa-star selected'\n            }\n        }\n    }\n\n    static numberOfOptions() { return 5 }\n}\n\nexport class Deluge {\n    /*::\n    project: string\n    path: string\n    questions: Question[]\n    state: State\n    storageKey: string\n    */\n\n    constructor(project/*: string*/, path/*: string*/) {\n        this.project = project\n        this.path = path\n        this.questions = []\n        this.state = 'NotVoted'\n\n        this.storageKey = `feedback-${project}/${path}`\n        const val = localStorage[this.storageKey]\n        const ratedDate = val? Date.parse(val).valueOf() : -Infinity;\n\n        // Expire the last rating after 30 days\n        if((new Date()).valueOf() < (ratedDate + (1000 * 60 * 60 * 24 * 30))) {\n            this.state = 'Voted'\n        }\n    }\n\n    draw(root/*: HTMLElement*/)/*: void*/ {\n        if(this.state === 'NotVoted') {\n            root.className = ''\n            root.innerHTML = '<p>Was this page helpful?</p>' +\n                             '<a class=\"button\" id=\"rate-up\">Yes</a>' +\n                             '<a class=\"button\" id=\"rate-down\">No</a>'\n            const rateUp = root.querySelector('#rate-up')\n            const rateDown = root.querySelector('#rate-down')\n\n            if (!rateUp || !rateDown) {\n                throw new Error('Assertion failed: couldn\\'t find buttons')\n            }\n\n            rateUp.onclick = () => {\n                this.state = new PendingVote(true)\n                this.draw(root)\n            }\n\n            rateDown.onclick = () => {\n                this.state = new PendingVote(false)\n                this.draw(root)\n            }\n\n            return\n        }\n\n        if(this.state === 'Voted') {\n            root.className = ''\n            root.innerHTML = '<p>Thank you for your feedback!</p>'\n            return\n        }\n\n        // Draw the survey\n        root.className = 'expanded'\n\n        // Store a copy of state to prevent changes that could result\n        // in a type error\n        const state = this.state\n\n        root.innerText = ''\n        const questionListElement = document.createElement('ul')\n\n        if(state.vote === false) {\n            const listElement = document.createElement('li')\n            listElement.innerText = 'We\\'re sorry! Please help us improve this page.'\n            questionListElement.appendChild(listElement)\n        }\n\n        this.questions.forEach((question) => {\n            question.clear()\n\n            const listElement = document.createElement('li')\n            listElement.appendChild(question.draw())\n            questionListElement.appendChild(listElement)\n        })\n\n        const buttonGroup = document.createElement('div')\n        buttonGroup.className = 'button-group'\n        questionListElement.appendChild(buttonGroup)\n\n        const cancelButtonElement = document.createElement('button')\n        cancelButtonElement.innerText = 'Cancel'\n        buttonGroup.appendChild(cancelButtonElement)\n        cancelButtonElement.onclick = () => {\n            this.state = 'NotVoted'\n            this.draw(root)\n        }\n\n        const submitButtonElement = document.createElement('button')\n        submitButtonElement.innerText = 'Submit'\n        submitButtonElement.className = 'primary'\n        buttonGroup.appendChild(submitButtonElement)\n        submitButtonElement.onclick = () => {\n            const answers = new Map()\n            this.questions.forEach((question) => {\n                if(question.answer != null) {\n                    answers.set(question.name, question.answer)\n                }\n            })\n\n            this.sendRating(state.vote, answers).then(() => {\n                const ratedDate = (new Date()).toISOString()\n                localStorage.setItem(this.storageKey, ratedDate)\n\n                this.state = 'Voted'\n                this.draw(root)\n            }).catch(() => {\n                console.error('Failed to send feedback')\n                this.state = 'NotVoted'\n                this.draw(root)\n            })\n        }\n\n        // Finally attach our new element tree to the DOM. Delay this\n        // to prevent unnecessary browser overhead\n        root.appendChild(questionListElement)\n    }\n\n    askQuestion(name/*: string*/, html/*: string*/)/*: Deluge*/ {\n        const question = new BinaryQuestion(name, html)\n        this.questions.push(question)\n\n        return this\n    }\n\n    askRangeQuestion(name/*: string*/, html/*: string*/)/*: Deluge*/ {\n        const question = new RangeQuestion(name, html)\n        this.questions.push(question)\n\n        return this\n    }\n\n    askFreeformQuestion(name/*: string*/, caption/*: string*/)/*: Deluge*/ {\n        const question = new FreeformQuestion(name, caption)\n        this.questions.push(question)\n\n        return this\n    }\n\n    sendRating(vote/*: boolean*/, fields/*: Map<string, string|number|boolean>*/)/*: Promise<void>*/ {\n        return new Promise((resolve, reject) => {\n            fields.set('v', vote)\n            fields.set('p', `${this.project}/${this.path}`)\n            const url = addQueryParameters(FEEDBACK_URL, fields)\n\n            // Report this rating using an image GET to work around the\n            // same-origin policy\n            const img = new Image()\n            img.onload = () => {\n\n                return resolve()\n            }\n            img.onerror = () => {\n                return reject()\n            }\n            img.src = url\n        })\n    }\n}\n","import {Deluge} from 'rigning';\n\nlet project = null;\n\n// Files on which we should not have feedback widgets\nconst blacklist = {\n    'meta/404': true,\n    'search': true\n};\n\n// Set up the JIRA collector widget\nlet _showCollectorDialog = null;\nfunction showCollectorDialog() {\n    if (_showCollectorDialog) {\n        _showCollectorDialog();\n        return false;\n    }\n\n    return undefined;\n}\n\nwindow.ATL_JQ_PAGE_PROPS =  {\n    'triggerFunction': function(showFunc) {\n        _showCollectorDialog = showFunc;\n    }\n};\n\nfunction updateLink(linkElement, pagename) {\n    const escapedPagename = encodeURIComponent(pagename);\n\n    linkElement.onclick = showCollectorDialog;\n    linkElement.target = '_blank';\n    linkElement.title = `Report a problem with ${pagename}.txt on Jira`;\n    linkElement.href = `https://jira.mongodb.org/secure/CreateIssueDetails!init.jspa?pid=10380&issuetype=4&priority=4&summary=Comment+on%3a+%22${escapedPagename}%2Etxt%22`;\n}\n\nfunction updateJiraProperties(pagename) {\n    window.ATL_JQ_PAGE_PROPS.fieldValues = {'summary': `Comment on: \"${project}/${pagename}.txt\"`};\n\n    jQuery.ajax({\n        'cache': true,\n        'dataType': 'script',\n        'type': 'get',\n        'url': 'https://jira.mongodb.org/s/en_UScn8g8x/782/6/1.2.5/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector-embededjs.js?collectorId=298ba4e7'\n    });\n\n    const links = document.querySelectorAll('.jirafeedback');\n    for (let i = 0; i < links.length; i += 1) {\n        updateLink(links[i], pagename);\n    }\n}\n\nfunction loadPage() {\n    const pagename = document.querySelector('.body').getAttribute('data-pagename');\n    updateJiraProperties(pagename);\n    if (Object.prototype.hasOwnProperty.call(blacklist, pagename)) {\n        return;\n    }\n\n    const ratingPanelElement = document.getElementById('rating-panel');\n    if (ratingPanelElement) {\n        (new Deluge(project, pagename)).\n            askFreeformQuestion('reason', 'What were you looking for?').\n            askQuestion('findability', 'Did you find it?').\n            askQuestion('accuracy', 'Was the information you found <strong>accurate</strong>?').\n            askQuestion('clarity', 'Was the information <strong>clear</strong>?').\n            askQuestion('fragmentation', 'Was the information you needed <strong>' +\n                        'all on one page</strong>?').\n            draw(ratingPanelElement);\n    }\n}\n\nexport function init() {\n    project = document.body.getAttribute('data-project');\n}\n\nexport function setup() {\n    // We require DOM storage. Don't show anything if support is not present.\n    if (window.localStorage === undefined) { return; }\n\n    loadPage();\n}\n","import * as util from './util';\n\n/* currently open page */\nfunction isCurrentNode($node) {\n    return $node.hasClass('current');\n}\n\nexport function setup() {\n    let $current = $('.sidebar a.current');\n    if (util.isLeafNode($current) || util.requiresPageload($current) || isCurrentNode($current)) {\n        $current.parent('li').addClass('selected-item');\n    }\n    $current.parents('ul').each((index, el) => {\n        $(el).css('display', 'block');\n    });\n\n    $('.sphinxsidebarwrapper > ul li:not(.current) > ul:not(.current)').hide();\n    $('.sphinxsidebarwrapper').show();\n\n    /*\n     * This event handler defines the left-column navigation's behavior\n     * The logic conforms to how sphinx generates the markup\n     * The rules are:\n     *  $('a.current') is the title of the content that is currently rendered\n     *    (this should never be changed client-side)\n     *  $('ul.current, li.current') are the set of lists that are currently expanded\n     *  $('li.selected-item') is the currently highlighted item\n     */\n    $('.sphinxsidebarwrapper .toctree-l1').on('click', 'a', (e) => {\n        const $target = $(e.currentTarget);\n        if (util.isLeafNode($target)) {\n            // Do a full page reload on leaf nodes\n            return;\n        }\n\n        // Release notes has special behavior to click through\n        if (!$target.parent().hasClass('selected-item') && util.requiresPageload($target)) {\n            return;\n        }\n\n        e.preventDefault();\n\n        if ($target.parent().hasClass('current')) {\n            // collapse target node\n            $target.parent().removeClass('current selected-item');\n            $target.siblings('ul').slideUp();\n        } else {\n\n            $current.parent().removeClass('selected-item');\n            // roll up all navigation up to the common ancestor\n            $current.parents().\n                add($current.siblings('ul')).\n                each((index, el) => {\n                    const $el = $(el);\n                    if ($el.has(e.currentTarget).length) {\n                        return;\n                    }\n\n                    if ($el.is('ul')) {\n                        $el.removeClass('current').slideUp();\n                    } else {\n                        $el.removeClass('current');\n                    }\n                });\n            // add css classes for the new 'current' nav item\n            $target.parent().addClass('current');\n            $target.siblings('ul').slideDown(() => {\n                if (util.isLeafNode($target) ||\n                    util.requiresPageload($target) ||\n                    isCurrentNode($current)) {\n                    $target.parent('li').addClass('selected-item');\n                }\n            });\n            // set new $current\n            $current = $target;\n        }\n    });\n\n    /* Add expand icons to indicate what's expandable and what's a link. This\n       is necessary when (1) we're at a leaf node, or (2) the menu triggers\n       a page load. */\n    $('.sphinxsidebarwrapper > ul ul a.reference').prepend(function(index) {\n        const expandElement = $('<span class=\"expand-icon\"></span>');\n        const self = $(this);\n\n        if (!util.isLeafNode(self)) {\n            expandElement.addClass('docs-expand-arrow');\n        }\n\n        return expandElement;\n    });\n}\n","// Show the appropriate tab content and hide other tab's content\nfunction showHideTabContent(currentAttrValue) {\n    // Remove the # to find <div> w/ class of the currentAttrValue\n    if (currentAttrValue.charAt(0) === '#') {\n        currentAttrValue = currentAttrValue.substring(1);\n    }\n    $(`.tabs .${currentAttrValue}`).\n        show().\n        siblings().\n        hide();\n}\n\n// Marks the selected tab as active, handles special cases for the dropdown\nfunction showHideSelectedTab(currentAttrValue) {\n    // Get the <a>, <li> and <ul> of the selected tab\n    const tabLink = $(`a[href=${currentAttrValue}]`);\n    const tabListItem = tabLink.parent('li');\n    const tabList = tabListItem.parent('ul');\n\n     // Get the dropdown <a> and <li> for active and label management\n    const dropdownLink = $('.nav.nav-tabs.nav-justified .dropdown-toggle');\n    const dropdownListItem = $('.nav.nav-tabs.nav-justified .dropdown');\n\n    // Set the active tab, if it's on the dropdown set it to active and change label\n    if (tabList.hasClass('dropdown-menu')) {\n        // Use first so text doesn't repeat if more than one set of tabs\n        dropdownLink.text(`${tabLink.first().text()}`).append('<span class=\"caret\"></span>');\n        dropdownListItem.\n            addClass('active').\n            siblings().\n            removeClass('active');\n    } else {\n        // Set a non-dropdown tab to active, and change the dropdown label back to \"Other\"\n        tabListItem.\n            addClass('active').\n            siblings().\n            removeClass('active');\n        dropdownLink.text('Other ').append('<span class=\"caret\"></span>');\n    }\n}\n\n// Show only the first set of tabs at the top of the page\nfunction hideTabBars() {\n    const tabBars = $('.nav.nav-tabs.nav-justified');\n    const mainTabBar = tabBars.first();\n    // Remove any additional tab bars\n    tabBars.slice(1).\n        detach();\n    // Position the main tab bar after the page title\n    mainTabBar.\n        detach().\n        insertAfter('h1').\n        first();\n}\n\n// Create tab functionality for code examples\nexport function setup() {\n    let initialAttrValue = null;\n\n    // Check if the user has a preference stored, if so load it\n    if (localStorage.getItem('languagePref')) {\n        initialAttrValue = localStorage.getItem('languagePref');\n    } else {\n        const tabsElement = document.querySelector('.nav-tabs > .active > [href]');\n        if (!tabsElement) {\n            return;\n        }\n\n        initialAttrValue = tabsElement.getAttribute('href');\n    }\n\n    // Show the appropriate tab content and mark the tab as active\n    showHideTabContent(initialAttrValue);\n    showHideSelectedTab(initialAttrValue);\n    hideTabBars();\n\n    document.querySelectorAll('.nav.nav-tabs.nav-justified a').forEach((element) => {\n        element.onclick = function(e) {\n            // Get the href of the clicked tab\n            const currentAttrValue = element.getAttribute('href');\n\n            // Check to make sure value is not null, i.e., don't do anything on \"other\"\n            if (currentAttrValue) {\n                // Save the users preference\n                localStorage.setItem('languagePref', currentAttrValue);\n\n                // Show the appropriate tab content and mark the tab as active\n                showHideTabContent(currentAttrValue);\n                showHideSelectedTab(currentAttrValue);\n                hideTabBars();\n\n                e.preventDefault();\n            }\n        };\n    });\n}\n","function fullDocsPath(base) {\n    const body = document.getElementsByClassName('body')[0];\n    let path = body.getAttribute('data-pagename');\n\n    // skip if pagename is undefined (index.html)\n    if (path === 'index') {\n        path = '';\n    } else if (path) {\n        path = `${path}/`;\n    }\n\n    return `/${base}/${path}`;\n}\n\nexport function setup() {\n    $('.version-selector').on('click', (e) => {\n        e.preventDefault();\n        const base = $(e.currentTarget).data('path');\n        window.location.href = fullDocsPath(base);\n    });\n}\n","import * as componentCopyButtons from './componentCopyButtons';\nimport * as componentFastLoad from './componentFastLoad';\nimport * as componentFeedback from './componentFeedback';\nimport * as componentSidebar from './componentSidebar';\nimport * as componentTabs from './componentTabs';\nimport * as componentVersionSelector from './componentVersionSelector';\n\nclass FastNav {\n    constructor() {\n        this.components = [];\n    }\n\n    register(component) {\n        this.components.push(component);\n        if (component.init) { component.init(); }\n    }\n\n    update() {\n        for (const component of this.components) {\n            component.setup(this);\n        }\n    }\n}\nconst fastNav = new FastNav();\n\n$(() => {\n    fastNav.register(componentCopyButtons);\n    fastNav.register(componentFastLoad);\n    fastNav.register(componentFeedback);\n    fastNav.register(componentSidebar);\n    fastNav.register(componentTabs);\n    fastNav.register(componentVersionSelector);\n\n    $('body').on('click', '#header-db, .sidebar, .content', (e) => {\n        $('.option-popup').\n            addClass('closed').\n            find('.fa-angle-down, .fa-angle-up').\n            removeClass('fa-angle-down').\n            addClass('fa-angle-up');\n    });\n\n    /* Open options panel when clicking the version */\n    $('.sphinxsidebarwrapper h3 a.version').on('click', (e) => {\n        e.preventDefault();\n\n        // stop propagation to prevent reclosing of the option panel\n        e.stopPropagation();\n        $('.option-popup').removeClass('closed');\n    });\n\n    /* Hide toc if there aren't any items */\n    if (!$('.toc > ul > li > ul > li').length) {\n        $('.right-column .toc').hide();\n    }\n\n    /* Expand/collapse navbar on narrower viewports */\n    $('.expand-toc-icon').on('click', (e) => {\n        e.preventDefault();\n        $('.sidebar').toggleClass('reveal');\n    });\n\n    /* Reset the sidebar when the viewport is wider than tablet size */\n    const $window = $(window);\n    const $sidebar = $('.sidebar');\n    let isTabletWidth = $window.width() <= 1093;\n    $window.resize((e) => {\n        if (isTabletWidth && $window.width() > 1093) {\n            isTabletWidth = false;\n            $sidebar.removeClass('reveal');\n        } else if (!isTabletWidth && $window.width() <= 1093) {\n            isTabletWidth = true;\n        }\n    });\n\n    /* Adjust the scroll location to account for our fixed header */\n    function offsetHashLink() {\n        if (location.hash && document.getElementById(location.hash.substr(1))) {\n            $(window).scrollTop(window.scrollY - 75);\n        }\n    }\n    window.addEventListener('hashchange', offsetHashLink);\n    if (location.hash) {\n        window.setTimeout(offsetHashLink, 10);\n    }\n    $('.content').on('click', 'a', (e) => {\n        // Fixes corner case where the user clicks the same hash link twice\n        if ($(e.currentTarget).attr('href') === location.hash) {\n            window.setTimeout(offsetHashLink, 10);\n        }\n    });\n\n    // Update dynamic page features\n    fastNav.update();\n\n    if (document.querySelector) {\n        // Scroll so that the selected navbar element is in view.\n        const current = document.querySelector('a.current');\n        if (current) {\n            current.scrollIntoView(false);\n        }\n    }\n});\n"],"names":["setup","copyableBlocks","document","getElementsByClassName","const","copyBlock","highlightElement","text","innerText","trim","copyButtonContainer","createElement","copyButton","copyIcon","className","appendChild","createTextNode","insertBefore","children","addEventListener","tempElement","body","value","select","successful","execCommand","Error","err","console","error","removeChild","isLeafNode","$node","siblings","length","requiresPageload","docsExcludedNav","window","let","i","href","indexOf","xhrGet","url","options","xhr","XMLHttpRequest","onload","status","success","responseText","responseURL","complete","onerror","open","send","fastNav","abortLoading","undefined","curLoading","timeoutID","clearTimeout","abort","loadPage","createHistory","bodyElement","classList","add","setTimeout","remove","startTime","Date","location","pageText","trueUrl","enlapsedMs","history","pushState","page","innerHTML","title","querySelector","textContent","newBody","newNav","parentElement","replaceChild","navRootElement","update","onnavigate","scroll","handleClickFunction","ev","button","shiftKey","altKey","metaKey","ctrlKey","preventDefault","currentTarget","querySelectorAll","replaceState","nodes","node","util.isLeafNode","$","util.requiresPageload","onpopstate","state","addQueryParameters","parameters","queryComponents","forEach","key","push","encodeURIComponent","JSON","stringify","join","showCollectorDialog","_showCollectorDialog","updateLink","linkElement","pagename","escapedPagename","onclick","target","updateJiraProperties","ATL_JQ_PAGE_PROPS","fieldValues","summary","project","jQuery","ajax","cache","dataType","type","links","getAttribute","Object","prototype","hasOwnProperty","call","blacklist","ratingPanelElement","getElementById","Deluge","askFreeformQuestion","askQuestion","draw","init","localStorage","isCurrentNode","hasClass","$current","parent","addClass","parents","each","index","el","css","hide","show","on","e","$target","removeClass","slideUp","$el","has","is","slideDown","prepend","expandElement","self","this","showHideTabContent","currentAttrValue","charAt","substring","showHideSelectedTab","tabLink","tabListItem","tabList","dropdownLink","dropdownListItem","first","append","hideTabBars","tabBars","mainTabBar","slice","detach","insertAfter","initialAttrValue","getItem","tabsElement","element","setItem","fullDocsPath","base","path","data","FEEDBACK_URL","PendingVote","vote","FreeformQuestion","name","caption","answer","clear","textForm","placeholder","oninput","BinaryQuestion","promptHtml","thumbsGutter","thumbsUp","thumbsDown","this$1","RangeQuestion","promptElement","starElements","starElement","updateView","numberOfOptions","loop","questions","storageKey","val","ratedDate","parse","valueOf","Infinity","root","rateUp","rateDown","questionListElement","listElement","question","buttonGroup","cancelButtonElement","submitButtonElement","answers","Map","set","sendRating","then","toISOString","catch","html","askRangeQuestion","fields","Promise","resolve","reject","img","Image","src","meta/404","search","triggerFunction","showFunc","FastNav","components","register","component","offsetHashLink","hash","substr","scrollTop","scrollY","componentCopyButtons","componentFastLoad","componentFeedback","componentSidebar","componentTabs","componentVersionSelector","find","stopPropagation","toggleClass","$window","$sidebar","isTabletWidth","width","resize","attr","current","scrollIntoView"],"mappings":"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"}